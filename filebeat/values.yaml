---
hostPathRoot: /var/lib  # ✅ Filebeat data volume 저장 경로 설정

daemonset:
  enabled: true

  extraEnvs:
#    - name: "ELASTICSEARCH_USERNAME"
#      valueFrom:
#        secretKeyRef:
#          name: elasticsearch-master-credentials
#          key: username
#    - name: "ELASTICSEARCH_PASSWORD"
#      valueFrom:
#        secretKeyRef:
#          name: elasticsearch-master-credentials
#          key: password

  filebeatConfig:
    filebeat.yml: |
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            node: ${NODE_NAME}
            hints.enabled: true
            hints.default_config:
              type: container
              paths:
                - /var/log/containers/*${data.kubernetes.container.id}.log

      processors:
        - add_cloud_metadata: ~
        - add_host_metadata: ~
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
              - logs_path:
                  logs_path: "/var/log/containers/"

      filebeat.modules:
        - module: system
          syslog:
            enabled: true
          auth:
            enabled: true

      output.logstash:
        hosts: ['195.168.9.181:5044']

  securityContext:
    runAsUser: 0
    privileged: false

  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "512Mi"

  tolerations: []

deployment:
  enabled: false

managedServiceAccount: true
serviceAccount: ""

terminationGracePeriod: 30

image: "docker.elastic.co/beats/filebeat"
imageTag: "8.5.1"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        curl --fail 127.0.0.1:5066
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        filebeat test output
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

clusterRoleRules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch

podAnnotations: {}
serviceAccountAnnotations: {}
priorityClassName: ""

updateStrategy: RollingUpdate

nameOverride: ""
fullnameOverride: ""

