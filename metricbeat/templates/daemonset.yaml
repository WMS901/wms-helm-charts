{{- if .Values.daemonset.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat-metricbeat
  labels:
    app: "metricbeat-metricbeat"
    chart: "metricbeat-8.5.1"
    heritage: "Helm"
    release: "metricbeat"
spec:
  selector:
    matchLabels:
      app: "metricbeat-metricbeat"
      release: "metricbeat"
  updateStrategy:
    type: {{ .Values.updateStrategy | default "RollingUpdate" }}
  template:
    metadata:
      annotations:
        configChecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
      name: "metricbeat-metricbeat"
      labels:
        app: "metricbeat-metricbeat"
        chart: "metricbeat-8.5.1"
        heritage: "Helm"
        release: "metricbeat"
    spec:
      affinity: {{ toYaml .Values.affinity | default "{}" | nindent 8 }}
      nodeSelector: {{ toYaml .Values.nodeSelector | default "{}" | nindent 8 }}
      tolerations: {{ toYaml .Values.tolerations | default "[]" | nindent 8 }}
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod | default 30 }}

      volumes:
        - name: metricbeat-config
          configMap:
            defaultMode: 0644
            name: metricbeat-metricbeat-config
        - name: data
          emptyDir: {}  # ✅ 데이터 저장을 위한 emptyDir 볼륨 유지
        - name: varrundockersock
          hostPath:
            path: /var/run/docker.sock
        - name: proc
          hostPath:
            path: /proc
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: sys
          hostPath:
            path: /sys
        - name: dev
          hostPath:
            path: /dev
        - name: hostfs
          hostPath:
            path: /

      containers:
        - name: "metricbeat"
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          args:
            - "-e"
            - "-E"
            - "http.enabled=true"
            - "--system.hostfs=/hostfs"
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                metricbeat test output
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                metricbeat test output
            initialDelaySeconds: 20
            periodSeconds: 30
          resources: {{ toYaml .Values.resources | default "{}" | nindent 12 }}

          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP  # ✅ Kubernetes에서 해당 Pod가 실행 중인 노드의 IP를 가져옴
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP

          envFrom: {{ toYaml .Values.envFrom | default "[]" | nindent 12 }}

          securityContext:
            runAsUser: 0
            privileged: false
            runAsGroup: 0
            fsGroup: 0

          volumeMounts:
            - name: metricbeat-config
              mountPath: /usr/share/metricbeat/metricbeat.yml
              readOnly: true
              subPath: metricbeat.yml
            - name: data
              mountPath: /usr/share/metricbeat/data
            - name: varrundockersock
              mountPath: /var/run/docker.sock
              readOnly: true
            - name: proc
              mountPath: /hostfs/proc
              readOnly: true
            - name: cgroup
              mountPath: /hostfs/sys/fs/cgroup
              readOnly: true
            - name: sys
              mountPath: /hostfs/sys/
              readOnly: true
            - name: dev
              mountPath: /hostfs/dev
              readOnly: true
            - name: hostfs
              mountPath: /hostfs
              readOnly: true
{{- end }}
